generator client {
  provider = "prisma-client-js"
  // output = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int    @id @default(autoincrement())
  nome      String
  email     String @unique
  senha     String
  matricula Int

  @@map("usuarios")
}

model Equipamento {
  id         Int      @id @default(autoincrement())
  nome       String   @map("equipamento")
  quantidade Int
  data       DateTime

  transferencias Transferencia[]
  estoqueItens   EstoqueItem[]

  @@map("equipamentos")
}

model Estoque {
  id   Int    @id @default(autoincrement())
  nome String @db.VarChar(100)

  transferenciasDestino Transferencia[] @relation("TransferenciaDestino")
  transferenciasOrigem  Transferencia[] @relation("TransferenciaOrigem")
  estoqueItens          EstoqueItem[]

  @@map("estoques")
}

model EstoqueItem {
  id         Int @id @default(autoincrement())
  itemId     Int
  estoqueId  Int
  quantidade Int

  item    Equipamento @relation(fields: [itemId], references: [id])
  estoque Estoque     @relation(fields: [estoqueId], references: [id])

  @@unique([itemId, estoqueId])
  @@map("estoque_itens")
}

model Transferencia {
  id                Int       @id @default(autoincrement())
  itemId            Int
  estoqueOrigemId   Int
  estoqueDestinoId  Int
  quantidade        Int
  dataTransferencia DateTime? @default(now())

  item    Equipamento @relation(fields: [itemId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  origem  Estoque     @relation("TransferenciaOrigem", fields: [estoqueOrigemId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  destino Estoque     @relation("TransferenciaDestino", fields: [estoqueDestinoId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("transferencias")
}
